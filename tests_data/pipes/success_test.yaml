__DESCRIPTION__: "Echo dynamic evaluation of available scopes in SCOPE_1"
__SCOPE__: SCOPE_1

__NAME__: a
# The pipe char allow to yaml to see all the folowing lines with the same 
# indentation as a litteral. see http://pyyaml.org/wiki/PyYAMLDocumentation
# for more info.
__CMD__: 
  - echo
  - | 
    Evaluated in scope SCOPE_1:
    SCOPE_1 -> ?{SCOPE_1} 

---

__DESCRIPTION__: "Echo dynamic evaluation of available scopes in SCOPE_2"
__SCOPE__: SCOPE_2
__INPUT__: 
__NAME__: b
__CMD__: 
  - echo
  - | 
    Evaluated in scope SCOPE_2:
    SCOPE_1 -> ?{SCOPE_1} 
    SCOPE_2 -> ?{SCOPE_2}

---

__DESCRIPTION__: "Echo dynamic evaluation of available scopes in SCOPE_3"
__SCOPE__: SCOPE_3

__NAME__: c
__CMD__: 
  - echo
  - | 
    Evaluated in scope SCOPE_3:
    SCOPE_1 -> ?{SCOPE_1} 
    SCOPE_2 -> ?{SCOPE_2}
    SCOPE_3 -> ?{SCOPE_3} 

---

__DESCRIPTION__: "Echo dynamic evaluation of available scopes in SCOPE_4"
__SCOPE__: SCOPE_4

__NAME__: d
__CMD__: 
  - echo
  - | 
    Evaluated in scope SCOPE_4:
    SCOPE_1 -> ?{SCOPE_1} 
    SCOPE_2 -> ?{SCOPE_2}
    SCOPE_3 -> ?{SCOPE_3}
    SCOPE_4 -> ?{SCOPE_4}
    file -> ?{SCOPE_1}?{SCOPE_2}?{SCOPE_3}?{SCOPE_4}

---

__DESCRIPTION__: "Echo dynamic evaluation of SCOPE_2_DIGIT from SCOPE_2_LETTER (redirection in SCOPE_1)"
__SCOPE__: SCOPE_2_LETTER

__NAME__: e
__CMD__: 
  - echo
  - | 
    Evaluated in scope SCOPE_1 while current expression is from SCOPE_2_LETTER:
    SCOPE_2_DIGIT  -> ?{SCOPE_2_DIGIT->SCOPE_1}
    Evaluated in scope SCOPE_2_LETTER:
    SCOPE_2_LETTER -> ?{SCOPE_2_LETTER}
